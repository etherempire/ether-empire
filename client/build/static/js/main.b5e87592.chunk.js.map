{"version":3,"sources":["getWeb3.js","webapp/src/components/Pages/Home.js","tilemap/lib/debounce.ts","tilemap/lib/viewport.ts","tilemap/render/tile.ts","webapp/src/constants/Constants.js","tilemap/render/map.ts","tilemap/components/TileMap/TileMap.tsx","tilemap/lib/panzoom.ts","tilemap/components/GameMap/GameMap.js","webapp/src/components/GameUI/TileInfo.js","webapp/src/components/GameUI/Editor.js","webapp/src/components/Pages/Game.js","webapp/src/components/Pages/HowToPlay.js","webapp/src/components/Pages/GetInvolved.js","webapp/src/components/Pages/Main.js","App.js","serviceWorker.js","index.js","webapp/src/components/Pages/ether-empire-logo.mp4","webapp/src/components/Pages/ether-empire-logo.png"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Home","className","loop","autoPlay","muted","src","logoAnimation","type","Button","color","Component","debounce","fn","ms","timeout","args","clearTimeout","setTimeout","getViewport","width","height","center","pan","size","padding","dimensions","Math","ceil","panX","x","panY","y","nw","se","area","renderTile","ctx","offset","left","top","topLeft","scale","fillStyle","tileSize","fillRect","gameSize","EMPTY","FARM","WALL","ENEMY_ARMY","FRIENDLY_ARMY","OUT_OF_BOUNDS","UNLOADED","SELECTED","typeIntToTypeColor","0","1","2","3","4","5","6","7","typeIntToTypeString","typeToInt","infoTypeToIndex","hexToRgbaLookup","Map","hexToRgba","hex","get","result","exec","rgba","parseInt","set","miniMap","Uint8ClampedArray","TileMap","props","oldState","canvas","mounted","hover","popupTimeout","mousedownTimestamp","destroy","debouncedRenderMap","renderMap","bind","debouncedUpdateCenter","updateCenter","debouncedHandleChange","handleChange","handleResize","setState","innerWidth","handlePanZoom","isDraggable","dx","dy","dz","maxSize","minSize","minX","maxX","minY","maxY","state","zoom","maxZoom","minZoom","newPan","newZoom","max","min","exp","getDzZoomModifier","newSize","halfWidth","halfHeight","boundaries","viewport","handleClick","event","mouseToCoords","offsetX","offsetY","inBounds","onClick","onMouseUp","Date","now","ctrlKey","shiftKey","handleMouseDown","onMouseDown","handleMouseMove","pageX","pageY","showPopup","hidePopup","handleMouseOut","refCanvas","handleTarget","initialX","initialY","initialState","popup","windowWidth","windowHeight","generateState","nextProps","nextState","this","newState","isViewportDifferent","target","cb","beforeMouseDown","_","pos","position","element","initX","initY","init","shouldPan","touchInitListener","mouseInitListener","e","lastY","lastX","impetus","Impetus","source","update","x0","y0","multiplier","friction","wheelListener","wheel","_dx","_dz","preventDefault","pinch","touchPinch","initialCoords","on","_curr","fingers","f1","f2","pause","resume","curr","prev","pinching","dispose","removeAllListeners","removeEventListener","panzoom","onChange","panOffset","viewportOffset","round","onPopup","onHover","visible","newCenter","floor","layers","getContext","sqrt","isMobile","classes","styles","trim","style","getCanvasClassName","ref","React","defaultProps","layer","tile","startIndex","i","halfSize","imageData","ImageData","putImageData","selected","isInBounds","select","push","GameMap","selectedLayer","some","coord","isSelected","simpleLayer","atlas","getWorldMapData","j","random","length","TileInfo","setTileInfo","info","coordinate","Editor","tileCoordinate","tileInfoElement","current","createWall","updateParent","createFarm","createArmy","divestTile","createRef","variant","disabled","Game","r","c","v","posX","posY","editorElement","Array","from","fill","container","offsetWidth","offsetHeight","el","forceUpdate","HowToPlay","GetInvolved","Main","useState","isOpen","setIsOpen","Navbar","light","expand","NavItem","NavLink","exact","to","activeClassName","tag","RRNavLink","logo","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","path","component","App","accounts","componentDidMount","eth","getAccounts","net","getId","runExample","alert","error","contract","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b5e87592.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport logoAnimation from \"./ether-empire-logo.mp4\";\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <center><h1 className=\"title\">Ether Empire</h1></center>\r\n        <video loop className=\"logoAnimation\" autoPlay muted>\r\n          <source src={logoAnimation} type=\"video/mp4\" />\r\n        </video>\r\n        <div >\r\n          <center>\r\n            <Button color=\"warning\">Connect to Metamask</Button>{' '}\r\n            <Button color=\"success\">Get Started</Button>{' '}\r\n          </center>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;","export const debounce = (fn: Function, ms: number) => {\r\n    let timeout: any = null\r\n    return (...args: any[]) => {\r\n      if (timeout != null) {\r\n        clearTimeout(timeout)\r\n      }\r\n      timeout = setTimeout(() => fn(...args), ms)\r\n    }\r\n  }","import { Coord } from './common'\r\n\r\nexport type Viewport = {\r\n  width: number\r\n  height: number\r\n  nw: Coord\r\n  se: Coord\r\n  area: number\r\n}\r\n\r\nexport function getViewport(args: {\r\n  width: number\r\n  height: number\r\n  center: Coord\r\n  size: number\r\n  padding: number\r\n  pan?: Coord\r\n}): Viewport {\r\n  const { width, height, center, pan, size, padding } = args\r\n  const dimensions = {\r\n    width: Math.ceil(width / size + padding),\r\n    height: Math.ceil(height / size + padding)\r\n  }\r\n  const panX = pan ? Math.ceil(pan.x / size) : 0\r\n  const panY = pan ? Math.ceil(pan.y / size) : 0\r\n  const nw = {\r\n    x: center.x - Math.ceil(dimensions.width / 2) + panX,\r\n    y: center.y + Math.ceil(dimensions.height / 2) - panY\r\n  }\r\n  const se = {\r\n    x: center.x + Math.ceil(dimensions.width / 2) + panX,\r\n    y: center.y - Math.ceil(dimensions.height / 2) - panY\r\n  }\r\n  const area = (se.x - nw.x) * (nw.y - se.y)\r\n\r\n  return {\r\n    ...dimensions,\r\n    nw,\r\n    se,\r\n    area\r\n  }\r\n}","export function renderTile(args: {\r\n    ctx: CanvasRenderingContext2D\r\n    x: number\r\n    y: number\r\n    size: number\r\n    padding: number\r\n    offset: number\r\n    color: string\r\n    left?: boolean\r\n    top?: boolean\r\n    topLeft?: boolean\r\n    scale?: number\r\n  }) {\r\n    const { ctx, x, y, size, padding, offset, color, left, top, topLeft, scale } = args\r\n  \r\n    ctx.fillStyle = color\r\n  \r\n    const tileSize = scale ? size * scale : size\r\n    \r\n\r\n    \r\n      if (!top && !left) {\r\n        // disconnected everywhere: it's a square\r\n        ctx.fillRect(\r\n          x - tileSize + padding,\r\n          y - tileSize + padding,\r\n          tileSize - padding,\r\n          tileSize - padding\r\n        )\r\n      } else if (top && left && topLeft) {\r\n        // connected everywhere: it's a square\r\n        ctx.fillRect(\r\n          x - tileSize - offset,\r\n          y - tileSize - offset,\r\n          tileSize + offset,\r\n          tileSize + offset\r\n        )\r\n      } else {\r\n        if (left) {\r\n          // connected left: it's a rectangle\r\n          ctx.fillRect(\r\n            x - tileSize - offset,\r\n            y - tileSize + padding,\r\n            tileSize + offset,\r\n            tileSize - padding\r\n          )\r\n        }\r\n        if (top) {\r\n          // connected top: it's a rectangle\r\n          ctx.fillRect(\r\n            x - tileSize + padding,\r\n            y - tileSize - offset,\r\n            tileSize - padding,\r\n            tileSize + offset\r\n          )\r\n        }\r\n      }\r\n    \r\n  }","export const gameSize = 10\r\n\r\nexport const color = {\r\n    EMPTY: \"#d3d3d3\", //light grey\r\n    FARM: \"#228B22\", //green\r\n    WALL: \"#282828\", //grey\r\n    ENEMY_ARMY: \"#8b0000\", //red\r\n    FRIENDLY_ARMY: \"#000080\", //blue\r\n    OUT_OF_BOUNDS: \"#000000\", //black\r\n    UNLOADED: \"#FF00FF\", //magneta\r\n    SELECTED: \"#FFFFFF80\" //white highlight\r\n}\r\n  \r\nexport const typeIntToTypeColor = {\r\n    0: color.EMPTY,\r\n    1: color.FARM,\r\n    2: color.WALL,\r\n    3: color.ENEMY_ARMY,\r\n    4: color.FRIENDLY_ARMY,\r\n    5: color.OUT_OF_BOUNDS,\r\n    6: color.UNLOADED,\r\n    7: color.SELECTED\r\n}\r\n\r\nexport const typeIntToTypeString = {\r\n    0: \"Empty\",\r\n    1: \"Farm\",\r\n    2: \"Wall\",\r\n    3: \"Enemy Army\",\r\n    4: \"Friendly Army\",\r\n    5: \"\",\r\n    6: \"Loading\",\r\n}\r\n\r\nexport const typeToInt = {\r\n    EMPTY: 0,\r\n    FARM: 1,\r\n    WALL:2,\r\n    ENEMY_ARMY: 3,\r\n    FRIENDLY_ARMY: 4,\r\n    OUT_OF_BOUNDS: 5,\r\n    UNLOADED: 6,\r\n    SELECTED: 7\r\n}\r\n\r\nexport const infoTypeToIndex = {\r\n    TILE_TYPE: 0,\r\n    OWNER: 1,\r\n    CREATED_BY: 2,\r\n    VALUE: 3\r\n}","import { renderTile } from './tile'\r\nimport { Coord, Layer } from '../lib/common'\r\nimport { gameSize } from '../../webapp/src/constants/Constants'\r\n\r\nvar hexToRgbaLookup = new Map()\r\nfunction hexToRgba(hex: string) {\r\n  if (hex in hexToRgbaLookup){\r\n    return hexToRgbaLookup.get(hex)\r\n  }else{\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    var rgba = result ? [parseInt(result[1], 16),parseInt(result[2], 16),parseInt(result[3], 16),255]: [0,0,0,0];\r\n    hexToRgbaLookup.set(hex,rgba)\r\n    return rgba\r\n  }\r\n}\r\n\r\nconst miniMap = new Uint8ClampedArray(4*gameSize*gameSize);\r\n\r\nexport function renderMap(args: {\r\n  ctx: CanvasRenderingContext2D\r\n  width: number\r\n  height: number\r\n  size: number\r\n  pan: Coord\r\n  nw: Coord\r\n  se: Coord\r\n  center: Coord\r\n  layers: Layer[]\r\n}) {\r\n  const { ctx, width, height, size, pan, nw, se, center, layers } = args\r\n\r\n  ctx.fillStyle = \"#000000\" //black background\r\n  ctx.fillRect(0, 0, width, height)\r\n\r\n  const halfWidth = width / 2\r\n  const halfHeight = height / 2\r\n\r\n  for (const layer of layers) {\r\n    for (let x = Math.max(nw.x,-gameSize/2); x < Math.min(se.x,gameSize/2); x++) {\r\n      for (let y = Math.max(se.y,-gameSize/2); y < Math.min(nw.y,gameSize/2); y++) {\r\n        const offsetX = (center.x - x) * size + (pan ? pan.x : 0)\r\n        const offsetY = (y - center.y) * size + (pan ? pan.y : 0)\r\n\r\n        const tile = layer(x, y)\r\n        if (!tile) {\r\n          continue\r\n        }\r\n        const { color, top, left, topLeft, scale } = tile\r\n\r\n        //update miniMap\r\n        const relX = x+gameSize/2\r\n        const relY = y+gameSize/2\r\n        const startIndex = 4*(relY*gameSize+relX)\r\n        const rgba = hexToRgba(color)\r\n        for(let i = 0; i<4; i++){\r\n          miniMap[startIndex+i]=rgba[i]\r\n        }\r\n\r\n        //do not render rects if size<=1\r\n        if (size>1){\r\n\r\n          const halfSize = scale ? (size * scale) / 2 : size / 2\r\n\r\n          renderTile({\r\n            ctx,\r\n            x: halfWidth - offsetX + halfSize,\r\n            y: halfHeight - offsetY + halfSize,\r\n            size,\r\n            padding: size<10?0 : size<15?.2 : size<20?.3 : size<25?.4 : size<30?.5 : 1,\r\n            offset: 1,\r\n            color,\r\n            left,\r\n            top,\r\n            topLeft,\r\n            scale: size<10? Math.max(1.1,scale ? scale : 1) : scale\r\n          })\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  //render saved miniMap if size <= 1\r\n  if (size<=1){\r\n      let imageData = new ImageData(miniMap, gameSize);\r\n      const offsetX = (center.x) + (pan ? pan.x : 0)\r\n      const offsetY = (-center.y) + (pan ? pan.y : 0)\r\n      ctx.putImageData(imageData, halfWidth - offsetX - gameSize/2, halfHeight - offsetY - gameSize/2);\r\n  }\r\n\r\n\r\n\r\n}","import * as React from 'react'\r\n\r\nimport { debounce } from '../../lib/debounce'\r\nimport { panzoom } from '../../lib/panzoom'\r\nimport { getViewport } from '../../lib/viewport'\r\nimport { Coord } from '../../lib/common'\r\nimport { renderMap } from '../../render/map'\r\nimport { Props, State } from './TileMap.types'\r\n\r\nimport './TileMap.css'\r\n\r\nconst MOBILE_WIDTH = 768\r\n\r\n\r\n\r\nexport class TileMap extends React.PureComponent<Props, State> {\r\n  static defaultProps = {\r\n    x: 0,\r\n    y: 0,\r\n    className: '',\r\n    initialX: 0,\r\n    initialY: 0,\r\n    size: 14,\r\n    zoom: .5,\r\n    minSize: 1,\r\n    maxSize: 100,\r\n    width: 640,\r\n    height: 480,\r\n    minX: -150,\r\n    maxX: 150,\r\n    minY: -150,\r\n    maxY: 150,\r\n    panX: 0,\r\n    panY: 0,\r\n    padding: 4,\r\n    isDraggable: true,\r\n    renderMap: renderMap\r\n  }\r\n\r\n  private oldState: State\r\n  private canvas: HTMLCanvasElement | null\r\n  private mounted: boolean\r\n  private hover: Coord | null\r\n  private popupTimeout: number | null\r\n  private mousedownTimestamp?: number\r\n  private destroy?: () => void\r\n\r\n  debouncedRenderMap = debounce(this.renderMap.bind(this), 400)\r\n  debouncedUpdateCenter = debounce(this.updateCenter.bind(this), 50)\r\n  debouncedHandleChange = debounce(this.handleChange.bind(this), 50)\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    const { x, y, initialX, initialY, size, zoom, panX, panY } = props\r\n    const initialState = {\r\n      pan: { x: panX, y: panY },\r\n      center: {\r\n        x: x == null ? initialX : x,\r\n        y: y == null ? initialY : y\r\n      },\r\n      size: zoom * size,\r\n      zoom,\r\n      popup: null,\r\n      windowWidth: 0,\r\n      windowHeight: 0\r\n    }\r\n    this.state = this.generateState(props, initialState)\r\n    this.oldState = this.state\r\n    this.hover = null\r\n    this.mounted = false\r\n    this.canvas = null\r\n    this.popupTimeout = null\r\n  }\r\n\r\n  UNSAFE_componentWillUpdate(nextProps: Props, nextState: State) {\r\n    const { x, y } = this.props\r\n\r\n    if (\r\n      (x !== nextProps.x || y !== nextProps.y) &&\r\n      (nextProps.x !== nextState.center.x || nextProps.y !== nextState.center.y)\r\n    ) {\r\n      nextState = {\r\n        ...nextState,\r\n        center: {\r\n          x: nextProps.x,\r\n          y: nextProps.y\r\n        },\r\n        pan: {\r\n          x: 0,\r\n          y: 0\r\n        }\r\n      }\r\n    }\r\n\r\n    const newState = this.generateState(nextProps, nextState)\r\n    const isViewportDifferent =\r\n      newState.width !== this.oldState.width ||\r\n      newState.height !== this.oldState.height ||\r\n      newState.nw.x !== this.oldState.nw.x ||\r\n      newState.nw.y !== this.oldState.nw.y ||\r\n      newState.se.x !== this.oldState.se.x ||\r\n      newState.se.y !== this.oldState.se.y ||\r\n      newState.zoom !== this.oldState.zoom\r\n\r\n    // The coords or the amount of parcels changed, so we need to update the state\r\n    if (nextProps.x !== x || nextProps.y !== y || !this.oldState || isViewportDifferent) {\r\n      this.oldState = newState\r\n      this.setState(newState)\r\n      this.debouncedHandleChange()\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\r\n    const { zoom, maxSize, minSize, size } = nextProps\r\n    const maxZoom = maxSize / size\r\n    const minZoom = minSize / size\r\n    const newZoom = Math.max(minZoom, Math.min(maxZoom, zoom))\r\n\r\n    if (newZoom !== this.props.zoom && newZoom !== this.state.zoom) {\r\n      this.setState({\r\n        zoom: newZoom,\r\n        size: this.props.size * newZoom\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.debouncedRenderMap()\r\n    this.oldState = this.state\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { isDraggable } = this.props\r\n\r\n    this.renderMap()\r\n\r\n    if (this.canvas) {\r\n      if (isDraggable) {\r\n        this.destroy = panzoom(this.canvas, this.handlePanZoom, (e:MouseEvent) => e.shiftKey)\r\n      }\r\n      this.canvas.addEventListener('click', this.handleClick)\r\n      this.canvas.addEventListener('mousedown', this.handleMouseDown)\r\n      this.canvas.addEventListener('mousemove', this.handleMouseMove)\r\n      this.canvas.addEventListener('mouseout', this.handleMouseOut)\r\n      window.addEventListener('resize', this.handleResize)\r\n    }\r\n    \r\n    this.mounted = true\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.destroy) {\r\n      this.destroy()\r\n    }\r\n    if (this.canvas) {\r\n      this.canvas.removeEventListener('click', this.handleClick)\r\n      this.canvas.removeEventListener('mousedown', this.handleMouseDown)\r\n      this.canvas.removeEventListener('mousemove', this.handleMouseMove)\r\n      this.canvas.removeEventListener('mouseout', this.handleMouseOut)\r\n    }\r\n    this.mounted = false\r\n  }\r\n\r\n  generateState(\r\n    props: { width: number; height: number; padding: number },\r\n    state: { pan: Coord; center: Coord; zoom: number; size: number, windowWidth: number, windowHeight: number}\r\n  ): State {\r\n    const { width, height, padding } = props\r\n    const { pan, zoom, center, size, windowWidth, windowHeight} = state\r\n    const viewport = getViewport({\r\n      width,\r\n      height,\r\n      center,\r\n      pan,\r\n      size,\r\n      padding\r\n    })\r\n    return { ...viewport, pan, zoom, center, size, windowWidth, windowHeight}\r\n  }\r\n\r\n  handleResize = () => {\r\n    console.log(\"here\")\r\n    this.setState({width: .8*window.innerWidth})\r\n    this.debouncedHandleChange()\r\n    this.renderMap()\r\n    this.debouncedUpdateCenter()\r\n  }\r\n\r\n  handleChange() {\r\n    const { onChange } = this.props\r\n    const { nw, se, center, zoom } = this.state\r\n    if (this.mounted && onChange) {\r\n      onChange({ nw, se, center, zoom })\r\n    }\r\n  }\r\n\r\n  handlePanZoom = (args: { dx: number; dy: number; dz: number }) => {\r\n    if (!this.props.isDraggable) return\r\n    const { dx, dy, dz } = args\r\n    const { size, maxSize, minSize, minX, maxX, minY, maxY, padding } = this.props\r\n    const { pan, zoom } = this.state\r\n\r\n    const maxZoom = maxSize / size\r\n    const minZoom = minSize / size\r\n\r\n    const newPan = { x: pan.x - dx, y: pan.y - dy }\r\n    const newZoom = Math.max(\r\n      minZoom,\r\n      Math.min(maxZoom, zoom * Math.exp(-dz * this.getDzZoomModifier()))\r\n    )\r\n    const newSize = newZoom * size\r\n\r\n    const halfWidth = (this.state.width - padding) / 2\r\n    const halfHeight = (this.state.height - padding) / 2\r\n\r\n    const boundaries = {\r\n      nw: { x: minX - halfWidth, y: maxY + halfHeight },\r\n      se: { x: maxX + halfWidth, y: minY - halfHeight }\r\n    }\r\n\r\n    const viewport = {\r\n      nw: {\r\n        x: this.state.center.x - halfWidth,\r\n        y: this.state.center.y + halfHeight\r\n      },\r\n      se: {\r\n        x: this.state.center.x + halfWidth,\r\n        y: this.state.center.y - halfHeight\r\n      }\r\n    }\r\n\r\n    if (viewport.nw.x + newPan.x / newSize < boundaries.nw.x) {\r\n      newPan.x = (boundaries.nw.x - viewport.nw.x) * newSize\r\n    }\r\n    if (viewport.nw.y - newPan.y / newSize > boundaries.nw.y) {\r\n      newPan.y = (viewport.nw.y - boundaries.nw.y) * newSize\r\n    }\r\n    if (viewport.se.x + newPan.x / newSize > boundaries.se.x) {\r\n      newPan.x = (boundaries.se.x - viewport.se.x) * newSize\r\n    }\r\n    if (viewport.se.y - newPan.y / newSize < boundaries.se.y) {\r\n      newPan.y = (viewport.se.y - boundaries.se.y) * newSize\r\n    }\r\n\r\n    this.setState({\r\n      pan: newPan,\r\n      zoom: newZoom,\r\n      size: newSize\r\n    })\r\n    this.renderMap()\r\n    this.debouncedUpdateCenter()\r\n  }\r\n\r\n  mouseToCoords(x: number, y: number) {\r\n    \r\n    const { padding } = this.props\r\n    const { size, pan, center, width, height } = this.state\r\n    const panOffset = { x: (x + pan.x) / size, y: (y + pan.y) / size }\r\n    const viewportOffset = {\r\n      x: (width - padding - 0.5) / 2 - center.x,\r\n      y: (height - padding) / 2 + center.y\r\n    }\r\n    const coordX = Math.round(panOffset.x - viewportOffset.x -.3) //- .3 is temp fix for mysterious issue #hackathon\r\n    const coordY = Math.round(viewportOffset.y - panOffset.y -.3)\r\n\r\n    return [coordX, coordY]\r\n  }\r\n\r\n  handleClick = (event: MouseEvent) => {\r\n    const [x, y] = this.mouseToCoords(event.offsetX, event.offsetY)\r\n    if (!this.inBounds(x, y)) {\r\n      return\r\n    }\r\n\r\n    const { onClick, onMouseUp } = this.props\r\n    if (onClick) {\r\n      const elapsed = Date.now() - this.mousedownTimestamp!\r\n      if (elapsed < 200) {\r\n        onClick(x, y, event.ctrlKey, event.shiftKey)\r\n        this.renderMap()\r\n      }\r\n    }\r\n    if (onMouseUp) {\r\n      onMouseUp(x, y)\r\n      this.renderMap()\r\n    }\r\n  }\r\n\r\n  handleMouseDown = (event: MouseEvent) => {\r\n    const { onMouseDown } = this.props\r\n    this.mousedownTimestamp = Date.now()\r\n    if (onMouseDown) {\r\n      const [x, y] = this.mouseToCoords(event.offsetX, event.offsetY)\r\n      if (!this.inBounds(x, y)) {\r\n        return\r\n      }\r\n      onMouseDown(x, y)\r\n      this.renderMap()\r\n    }\r\n  }\r\n\r\n  handleMouseMove = (event: MouseEvent) => {\r\n    const { pageX, pageY } = event\r\n    const [x, y] = this.mouseToCoords(pageX, pageY)\r\n    if (!this.inBounds(x, y)) {\r\n      this.hidePopup()\r\n      return\r\n    }\r\n\r\n    if (!this.hover || this.hover.x !== x || this.hover.y !== y) {\r\n      this.hover = { x, y }\r\n      this.showPopup(x, y, pageY, pageX)\r\n    }\r\n  }\r\n\r\n  handleMouseOut = () => {\r\n    this.hidePopup()\r\n  }\r\n\r\n  inBounds(x: number, y: number) {\r\n    const { minX, minY, maxX, maxY } = this.props\r\n    return x >= minX && x <= maxX && y >= minY && y <= maxY\r\n  }\r\n\r\n  showPopup(x: number, y: number, top: number, left: number) {\r\n    const { onPopup, onHover } = this.props\r\n\r\n    if (onPopup) {\r\n      this.hidePopup()\r\n      this.popupTimeout = +setTimeout(() => {\r\n        if (this.mounted) {\r\n          this.setState(\r\n            {\r\n              popup: { x, y, top, left, visible: true }\r\n            },\r\n            () => onPopup(this.state.popup!)\r\n          )\r\n        }\r\n      }, 400)\r\n    }\r\n\r\n    if (onHover) {\r\n      onHover(x, y)\r\n      this.renderMap()\r\n    }\r\n  }\r\n\r\n  hidePopup() {\r\n    const { onPopup } = this.props\r\n    if (onPopup) {\r\n      if (this.popupTimeout) {\r\n        clearTimeout(this.popupTimeout)\r\n      }\r\n\r\n      if (this.state.popup) {\r\n        this.setState(\r\n          {\r\n            popup: {\r\n              ...this.state.popup,\r\n              visible: false\r\n            }\r\n          },\r\n          () => {\r\n            onPopup(this.state.popup!)\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  updateCenter() {\r\n    const { pan, center, size } = this.state\r\n\r\n    const panX = pan.x % size\r\n    const panY = pan.y % size\r\n    const newPan = { x: panX, y: panY }\r\n    const newCenter = {\r\n      x: center.x + Math.floor((pan.x - panX) / size),\r\n      y: center.y - Math.floor((pan.y - panY) / size)\r\n    }\r\n\r\n    this.setState({\r\n      pan: newPan,\r\n      center: newCenter\r\n    })\r\n  }\r\n\r\n  renderMap() {\r\n    if (!this.canvas) {\r\n      return\r\n    }\r\n\r\n    const { width, height, layers, renderMap } = this.props\r\n    const { nw, se, pan, size, center } = this.state\r\n    const ctx = this.canvas.getContext('2d')!\r\n\r\n    renderMap({\r\n      ctx,\r\n      width,\r\n      height,\r\n      size,\r\n      pan,\r\n      nw,\r\n      se,\r\n      center,\r\n      layers\r\n    })\r\n  }\r\n\r\n  refCanvas = (canvas: HTMLCanvasElement | null) => {\r\n    this.canvas = canvas\r\n  }\r\n\r\n  handleTarget = () => {\r\n    const { x, y } = this.props\r\n    this.setState({ center: { x, y } })\r\n  }\r\n\r\n  getDz() {\r\n    const { zoom } = this.state\r\n    return Math.sqrt(zoom) * (this.isMobile() ? 100 : 50)\r\n  }\r\n\r\n  getDzZoomModifier() {\r\n    return this.isMobile() ? 0.005 : 0.004\r\n  }\r\n\r\n  isMobile() {\r\n    return this.props.width < MOBILE_WIDTH\r\n  }\r\n\r\n  getCanvasClassName() {\r\n    const { isDraggable, onClick } = this.props\r\n\r\n    let classes = 'react-tile-map-canvas'\r\n    if (isDraggable) classes += ' draggable'\r\n    if (onClick) classes += ' clickable'\r\n\r\n    return classes\r\n  }\r\n\r\n  render() {\r\n    const { width, height, className } = this.props\r\n\r\n    const styles = { width, height }\r\n\r\n    const classes = ('react-tile-map ' + className).trim()\r\n\r\n    return (\r\n      <div className={classes} style={styles}>\r\n        <canvas\r\n          className={this.getCanvasClassName()}\r\n          width={width}\r\n          height={height}\r\n          ref={this.refCanvas}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n  The following code was taken from https://github.com/dy/pan-zoom\r\n  and modified a bit to allow disposing the event listeners\r\n*/\r\n\r\nimport * as Impetus from 'impetus'\r\nimport * as wheel from 'mouse-wheel'\r\nimport * as touchPinch from 'touch-pinch'\r\nimport * as position from 'touch-position'\r\n\r\n\r\ntype PanZoomEventType = 'mouse' | 'touch'\r\n\r\ntype PanZoomEvent = {\r\n  target: HTMLElement\r\n  type: PanZoomEventType\r\n  dx: number\r\n  dy: number\r\n  dz: number\r\n  x: number\r\n  y: number\r\n  x0: number\r\n  y0: number\r\n}\r\n\r\nexport function panzoom(target: HTMLElement, \r\n  cb: (e: PanZoomEvent) => void, \r\n  beforeMouseDown: (e: MouseEvent) => boolean = (_) => false ) {\r\n  //enable panning\r\n  let pos = position.emitter({\r\n    element: target\r\n  })\r\n\r\n  let initX = 0\r\n  let initY = 0\r\n  let init = true\r\n\r\n  let shouldPan = true\r\n\r\n  const touchInitListener = () => (init = true)\r\n  const mouseInitListener = (e: MouseEvent) => {init = true; shouldPan = !beforeMouseDown(e)}\r\n\r\n  target.addEventListener('mousedown', mouseInitListener)\r\n  target.addEventListener('touchstart', touchInitListener)\r\n\r\n  let lastY = 0\r\n  let lastX = 0\r\n  const impetus = new Impetus({\r\n    source: target,\r\n    update: (x:number, y:number) => {\r\n      if (init) {\r\n        init = false\r\n        initX = pos[0]\r\n        initY = pos[1]\r\n      }\r\n\r\n      var dx = 0\r\n      var dy = 0\r\n      if (shouldPan){\r\n        dx = x - lastX\r\n        dy = y - lastY\r\n      }\r\n\r\n      let e: PanZoomEvent = {\r\n        target,\r\n        type: 'mouse',\r\n        dx: dx,\r\n        dy: dy,\r\n        dz: 0,\r\n        x: pos[0],\r\n        y: pos[1],\r\n        x0: initX,\r\n        y0: initY\r\n      }\r\n\r\n      lastX = x\r\n      lastY = y\r\n\r\n      cb(e)\r\n    },\r\n    multiplier: 1,\r\n    friction: 0.75\r\n  })\r\n\r\n  //enable zooming\r\n  const wheelListener = wheel(target, (_dx:number, dy:number, _dz:number, e: { preventDefault: () => void }) => {\r\n    e.preventDefault()\r\n    cb({\r\n      target,\r\n      type: 'mouse',\r\n      dx: 0,\r\n      dy: 0,\r\n      dz: dy,\r\n      x: pos[0],\r\n      y: pos[1],\r\n      x0: pos[0],\r\n      y0: pos[1]\r\n    })\r\n  })\r\n\r\n  //mobile pinch zoom\r\n  let pinch = touchPinch(target)\r\n  let mult = 2\r\n  let initialCoords: number[] | null = null\r\n\r\n  pinch.on('start', (_curr: any) => {\r\n    let [f1, f2] = pinch.fingers\r\n\r\n    initialCoords = [\r\n      f2!.position[0] * 0.5 + f1!.position[0] * 0.5,\r\n      f2!.position[1] * 0.5 + f1!.position[1] * 0.5\r\n    ]\r\n\r\n    impetus && impetus.pause()\r\n  })\r\n  pinch.on('end', () => {\r\n    if (!initialCoords) return\r\n\r\n    initialCoords = null\r\n\r\n    impetus && impetus.resume()\r\n  })\r\n  pinch.on('change', (curr: number, prev: number) => {\r\n    if (!pinch.pinching || !initialCoords) return\r\n\r\n    cb({\r\n      target,\r\n      type: 'touch',\r\n      dx: 0,\r\n      dy: 0,\r\n      dz: -(curr - prev) * mult,\r\n      x: initialCoords[0],\r\n      y: initialCoords[1],\r\n      x0: initialCoords[0],\r\n      y0: initialCoords[0]\r\n    })\r\n  })\r\n\r\n  return function dispose() {\r\n    impetus.destroy()\r\n    pos.dispose()\r\n    pinch.removeAllListeners()\r\n    target.removeEventListener('wheel', wheelListener)\r\n    target.removeEventListener('mousedown', mouseInitListener)\r\n    target.removeEventListener('touchstart', touchInitListener)\r\n  }\r\n}","import React, { useCallback, useState} from 'react'\r\n\r\nimport { TileMap } from '../TileMap/TileMap'\r\nimport { Layer } from '../../lib/common'\r\nimport { Component } from 'react'\r\nimport { color, typeIntToTypeColor, gameSize} from \"../../../webapp/src/constants/Constants\"\r\n\r\nconst selected = []\r\n\r\nfunction isSelected(x, y) {\r\n  return selected.some(coord => coord.x === x && coord.y === y)\r\n}\r\n\r\nfunction isInBounds(x, y) {\r\n  return (x >= -(gameSize/2) && x<(gameSize/2) && y >= -(gameSize/2) && y<(gameSize/2))\r\n}\r\n\r\nfunction select(x, y) {\r\n  if (isInBounds(x,y)){\r\n    selected.push({ x, y })\r\n  }\r\n}\r\n\r\nfunction unselectAll() {\r\n  selected.length = 0\r\n}\r\n\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\n\r\nclass GameMap extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.getWorldMapData();\r\n  }\r\n\r\n  selectedLayer = (x, y) => {\r\n    if (isSelected(x,y)){\r\n      return  {color: color.SELECTED, scale: 1.2}\r\n    }else{\r\n      return null\r\n    }\r\n  }\r\n\r\n  simpleLayer = (x, y) => {\r\n    if (isInBounds(x,y)){\r\n      return {\r\n        color: typeIntToTypeColor[this.props.atlas[x + (gameSize/2)][y + (gameSize/2)][0]]\r\n      }\r\n    }else{\r\n      return {\r\n        color: color.OUT_OF_BOUNDS\r\n      }\r\n    }\r\n  }\r\n\r\n  /* //construction\r\n  localLayer = (x, y) => {\r\n    if (isInBounds(x,y)){\r\n      return {\r\n        color: typeIntToTypeColor[this.props.atlas[x + (gameSize/2)][y + (gameSize/2)]]\r\n      }\r\n    }else{\r\n      return {\r\n        color: color.OUT_OF_BOUNDS\r\n      }\r\n    }\r\n  }*/\r\n\r\n  async getWorldMapData() {\r\n    var i\r\n    var j\r\n    for (i=0;i<gameSize;i++){\r\n      for (j=0;j<gameSize;j++){\r\n        this.props.atlas[i][j] = [getRandomInt(6),0];\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClick(x,y,ctrlKey,shiftKey){\r\n    if (shiftKey){\r\n\r\n    }else if(ctrlKey){\r\n      select(x,y);\r\n    }else{\r\n      unselectAll();\r\n      select(x,y);\r\n    }\r\n  }\r\n\r\n  render(\r\n    ) {\r\n      return (\r\n        <div>\r\n          <TileMap\r\n            layers={[this.simpleLayer,this.selectedLayer]} \r\n            onClick={(x,y,ctrlKey,shiftKey) => {this.props.onClick(x,y); this.handleClick(x,y,ctrlKey,shiftKey) } }\r\n            minX={-1.5*gameSize}\r\n            maxX={1.5*gameSize}\r\n            minY={-1.5*gameSize}\r\n            maxY={1.5*gameSize}\r\n            width ={this.props.width}\r\n            height = {this.props.height}\r\n              />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default GameMap\r\n","import React, { Component } from \"react\";\r\nimport { typeIntToTypeString } from \"../../constants/Constants\";\r\n \r\nclass TileInfo extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        coordinate : this.props.coordinate,\r\n        info: this.props.info,\r\n        type: this.props.info[0]\r\n    }\r\n  }\r\n\r\n  setTileInfo = (x,y,info) => {\r\n    this.setState({\r\n        coordinate: {x:x,y:y},\r\n        info: info,\r\n        type: info[0]\r\n        })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <p>Tile Coords: ({this.state.coordinate.x},{this.state.coordinate.y})</p>\r\n          <p>Tile Type: {typeIntToTypeString[this.state.type]}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default TileInfo;","import React, { Component } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TileInfo from './TileInfo'\r\nimport { gameSize, infoTypeToIndex, typeToInt } from \"../../constants/Constants\";\r\n\r\n// /{this.props.tileInfo.x}\r\n\r\nclass Editor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.tileInfoElement = React.createRef();\r\n        this.state = { tileCoordinate : {x:0,y:0}, info: [6] };\r\n    }\r\n\r\n    setTileInfo = (x,y,info) => {\r\n        this.setState( {tileCoordinate: {x:x,y:y}, info: info })\r\n        this.tileInfoElement.current.setTileInfo(x,y,info)\r\n    }\r\n\r\n    createWall = () => {\r\n        //confirmation popup\r\n        //send contract\r\n        //update locally if contract sent\r\n        this.props.atlas[this.state.tileCoordinate.x+gameSize/2][this.state.tileCoordinate.y+gameSize/2][0] = typeToInt.WALL\r\n        this.props.updateParent()\r\n        //specifiy construction in progress\r\n    }\r\n\r\n    createFarm = () => {\r\n        //confirmation popup\r\n        //send contract\r\n        this.props.atlas[this.state.tileCoordinate.x+gameSize/2][this.state.tileCoordinate.y+gameSize/2][0] = typeToInt.FARM\r\n        this.props.updateParent()\r\n    }\r\n\r\n    createArmy = () => {\r\n        //confirmation popup\r\n        //send contract\r\n        this.props.atlas[this.state.tileCoordinate.x+gameSize/2][this.state.tileCoordinate.y+gameSize/2][0] = typeToInt.FRIENDLY_ARMY\r\n        this.props.updateParent()\r\n    }\r\n\r\n    divestTile = () => {\r\n        //confirmation popup\r\n        //send contract\r\n        this.props.atlas[this.state.tileCoordinate.x+gameSize/2][this.state.tileCoordinate.y+gameSize/2][0] = typeToInt.EMPTY\r\n        this.props.updateParent()\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"colC\">\r\n          <Button variant=\"contained\" disabled={this.state.info[infoTypeToIndex.TILE_TYPE]!=typeToInt.EMPTY} onClick={this.createWall}>\r\n            Create Wall\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" disabled={this.state.info[infoTypeToIndex.TILE_TYPE]!=typeToInt.EMPTY} onClick={this.createFarm}>\r\n            Create Farm\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" disabled={this.state.info[infoTypeToIndex.TILE_TYPE]!=typeToInt.EMPTY} onClick={this.createArmy}>\r\n            Create Army\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" \r\n            disabled={this.state.info[infoTypeToIndex.TILE_TYPE]!=typeToInt.FARM \r\n                && this.state.info[infoTypeToIndex.TILE_TYPE]!=typeToInt.FRIENDLY_ARMY} \r\n            onClick={this.divestTile}>\r\n            Divest\r\n          </Button>\r\n\r\n          <TileInfo ref={this.tileInfoElement} coordinate={this.state.tileCoordinate} info={this.state.info}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default Editor;","import React, { Component } from \"react\";\r\nimport GameMap from \"../../../../tilemap/components/GameMap/GameMap\"\r\nimport Editor from \"../GameUI/Editor\"\r\nimport { gameSize } from \"../../constants/Constants\"\r\n\r\n\r\nfunction uniform(r,c,v) {\r\n  return Array.from(Array(r), _ => Array(c).fill(v));\r\n}\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    dimensions: {\r\n      width: 100,\r\n      height: 100,\r\n    },\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.editorElement = React.createRef();\r\n    this.atlas = uniform(gameSize,gameSize,[6,0])\r\n  }\r\n\r\n  onClick = (x,y) => {\r\n    const posX = x + (gameSize/2)\r\n    const posY = y + (gameSize/2)\r\n    if (posX >= 0 && posX<gameSize && posY >= 0 && posY<gameSize){\r\n      this.editorElement.current.setTileInfo(x,y,this.atlas[posX][posY])\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      dimensions: {\r\n        width: this.container.offsetWidth,\r\n        height: this.container.offsetHeight,\r\n      },\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { dimensions } = this.state;\r\n    return (\r\n      <div className='rowC'>\r\n        <div className=\"item\" ref={el => (this.container = el)}>\r\n          <GameMap onClick={this.onClick} atlas={this.atlas} width={dimensions.width} height={725}/>\r\n        </div>\r\n        <Editor ref={this.editorElement} atlas={this.atlas} updateParent={()=>{this.forceUpdate()}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"./Tutorial.css\";\r\n\r\nclass HowToPlay extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <h2>GETTING STARTED</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HowToPlay;","import React, { Component } from \"react\";\r\n \r\nclass GetInvolved extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>GOT QUESTIONS?</h2>\r\n        <p>Sorry can't help you there.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default GetInvolved;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\nimport {\r\n  Route,\r\n  HashRouter,\r\n  Switch,\r\n  NavLink as RRNavLink\r\n} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Game from \"./Game\";\r\nimport HowToPlay from \"./HowToPlay\";\r\nimport GetInvolved from \"./GetInvolved\";\r\nimport logo from \"./ether-empire-logo.png\";\r\nimport \"./Main.css\";\r\n\r\nconst Main = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <div className=\"main\">\r\n      <HashRouter>\r\n        <div className=\"navigation-bar-container\">\r\n          <div className=\"navigation-bar\">\r\n            <Navbar color=\"light\" light expand=\"xl\">\r\n              <NavItem>\r\n                <NavLink exact to=\"/\" activeClassName=\"active\" tag={RRNavLink}><img className=\"navigation-logo\" src={logo}></img></NavLink>\r\n              </NavItem>\r\n              <NavbarToggler onClick={toggle} />\r\n              <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                  <NavItem>\r\n                    <NavLink to=\"/game\" activeClassName=\"active\" tag={RRNavLink}>Game</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/how-to-play\" activeClassName=\"active\" tag={RRNavLink}>Tutorial</NavLink>\r\n                  </NavItem>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      Misc\r\n                </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        <NavLink to=\"/get-involved\" activeClassName=\"active\" tag={RRNavLink}>Get Involved</NavLink>\r\n                      </DropdownItem>\r\n                      <DropdownItem divider />\r\n                      <DropdownItem>\r\n                        Contact\r\n                  </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </Nav>\r\n              </Collapse>\r\n            </Navbar>\r\n          </div>\r\n        </div>\r\n        <div  className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/game\" component={Game} />\r\n            <Route path=\"/how-to-play\" component={HowToPlay} />\r\n            <Route path=\"/get-involved\" component={GetInvolved} />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, { Component } from \"react\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport Main from \"./webapp/src/components/Pages/Main\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = { web3: null, accounts: null };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      // const deployedNetwork = SimpleStorageContract.networks[networkId];\r\n      // const instance = new web3.eth.Contract(\r\n      //   SimpleStorageContract.abi,\r\n      //   deployedNetwork && deployedNetwork.address,\r\n      // );\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState({ web3, accounts }, this.runExample);\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  runExample = async () => {\r\n    const { accounts, contract } = this.state;\r\n\r\n    // Sample code for invoking (send) and receiving (call) from a contract \r\n    // // Stores a given value, 5 by default.\r\n    // await contract.methods.set(5).send({ from: accounts[0] });\r\n\r\n    // // Get the value from the contract to prove it worked.\r\n    // const response = await contract.methods.get().call();\r\n\r\n    // // Update state with the result.\r\n    // this.setState({ storageValue: response });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return <div>Loading Web3, accounts, and contract...</div>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Main/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ether-empire-logo.9db8f307.mp4\";","module.exports = __webpack_public_path__ + \"static/media/ether-empire-logo.63c7cae1.png\";"],"sourceRoot":""}